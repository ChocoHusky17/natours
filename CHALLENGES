1. Implement restriction that users can oly review a tour that they have actually booked

2. Implement nested booking routes: /tours/:id/bookings and users/:id/bookings

3. Improve tour dates : add a participants and a soldOut field to each date.
   A date then becomes like an instance of the tour.
   Then, when a user books, they need to select one of the dates.
   A new booking will increase the number of participants in the date, until it is booked out (participants > maxGroupSize).
   So, when a user wants to book, you need to check if tour on the selected date is still available.

4. Implement advanced authentication features: confirm user email, keep users logged in with refresh tokens, two-factor authentication, etc.

5. Implement a sign up form, similar to the login form.

6. On the tour detail page, if a user has taken a tour, allow them add a review directly on the website. Impement a form for this.

7. Hide the entire booking selection on the tour detail page if current user has already booked the tour (also prevent duplicate bookings on the model)

8. Implement "like tour" functionality, with favorite tour page.

9. On the user account page, implement the "My Reviews" page, where all reviews are displayed, and a user can edit them. (If you know React, this would be an amazing way to use the Natours API and train you skills!)

10. For administrators, implement all the "Manage" pages, where they can CRUD (create, read, update, delete) tours, users, reviews, and bookings
